An important idea in programming is scope. Scope defines where variables can be accessed or referenced. While some variables can be accessed from anywhere within a program, other variables may only be available in a specific context.

Blocks and Scope:- Weâ€™ve seen blocks used before in functions and if statements. A block is the code found inside a set of curly braces {}. Blocks help us group one or more statements together and serve as an important structural marker for our code.

Global Scope:-In global scope, variables are declared outside of blocks. These variables are called global variables.Because global variables are not bound inside a block, they can be accessed by any code in the program, including code in blocks.

Block Scope:-When a variable is defined inside a block, it is only accessible to the code within the curly braces {}.
We say that variable has block scope because it is only accessible to the lines of code within that block. Variables that are declared with block scope are known as local variables because they are only available to the code that is part of the same block.

Scope Pollution:-It may seem like a great idea to always make your variables accessible, but having too many global variables can cause problems in a program. 
Scope pollution is when we have too many global variables that exist in the global namespace, or when we reuse variables across different scopes.

Scope is the idea in programming that some variables are accessible/inaccessible from other parts of the program.
Blocks are statements that exist within curly braces {}.
Global scope refers to the context within which variables are accessible to every part of the program.
Global variables are variables that exist within global scope.
Block scope refers to the context within which variables that are accessible only within the block they are defined.
Local variables are variables that exist within block scope.
Global namespace is the space in our code that contains globally scoped information.
Scope pollution is when too many variables exist in a namespace or variable names are reused.